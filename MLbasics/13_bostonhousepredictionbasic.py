# -*- coding: utf-8 -*-
"""13.BostonHousePredictionBasic.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1PvBoJ8EDjyAViTkDVedjZLFzjc1LyWAS
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import seaborn as sns
import sklearn.datasets
from sklearn.model_selection import train_test_split
from xgboost import  XGBRegressor
from sklearn import metrics
from sklearn.metrics import accuracy_score

dataset = pd.read_csv('/content/Boston-house-price-data.csv')

dataset.head()

dataset.shape

dataset.isnull().sum()

plt.figure(figsize=(10,10))
sns.heatmap(dataset.corr(),annot=True,cmap='Blues')

x=dataset.drop('MEDV',axis=1)
y=dataset['MEDV']

print(x)
print(y)

x_train,x_test,y_train,y_test=train_test_split(x,y,test_size=0.2,random_state=2)

"""mODEL BUILDING"""

model=XGBRegressor()
model.fit(x_train,y_train)

training_data_prediction=model.predict(x_train)

score_01 = metrics.r2_score(y_train,training_data_prediction)
print("R squared error : ", score_01)

score_02 = metrics.mean_absolute_error(y_train,training_data_prediction)
print("Mean Absolute Error : ", score_02)

plt.scatter(y_train, training_data_prediction)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual Price vs Preicted Price")
plt.show()

test_data_prediction=model.predict(x_test)

score_01= metrics.r2_score(y_test,test_data_prediction)
print("R squared error : ", score_01)
score_02= metrics.mean_absolute_error(y_test,test_data_prediction)
print("Mean Absolute Error : ", score_02)

plt.scatter(y_test, test_data_prediction)
plt.xlabel("Actual Prices")
plt.ylabel("Predicted Prices")
plt.title("Actual Price vs Preicted Price")
plt.show()